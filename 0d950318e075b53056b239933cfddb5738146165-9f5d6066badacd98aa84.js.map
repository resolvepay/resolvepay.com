{"version":3,"sources":["webpack:///./src/components/Input.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/utils/gql.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/components/BlockLogos.js"],"names":["Input","error","label","props","id","errorId","colors","fonts","halyardText","inputBorder","halyardDisplay","input","inputPlaceholder","inputError","htmlFor","aria-invalid","undefined","aria-describedby","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","defaultGetter","node","childImageSharp","fluid","edgesByName","collection","getter","edges","reduce","memo","edge","name","module","exports","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","obj","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","BlockLogos","pretitle","title","data","screen","mobileMax","map","index","image","offsetTop","imgStyle","objectFit","alt","className","style","top"],"mappings":"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","file":"0d950318e075b53056b239933cfddb5738146165-9f5d6066badacd98aa84.js","sourcesContent":["import React from 'react';\n\nimport Error from './Error';\n\nimport { colors, fonts } from '../constants';\n\nexport default function Input({ error, label, ...props }) {\n  const { id } = props;\n  const errorId = `${id}-error`;\n\n  return (\n    <div className=\"input__container\">\n      {label && (\n        <label className=\"label\" htmlFor={id}>\n          {label}\n        </label>\n      )}\n      <div className=\"input\">\n        <input\n          className={`input__line ${error ? 'input_invalid' : ''}`}\n          aria-invalid={error ? 'true' : undefined}\n          aria-describedby={error ? errorId : undefined}\n          {...props}\n        />\n        {error && (\n          <div className=\"input__error\">\n            <Error error={error} id={errorId} />\n          </div>\n        )}\n      </div>\n      <style jsx>{`\n        .input__container {\n          width: 100%;\n        }\n        .label {\n          font-size: 14px;\n          font-weight: 400;\n          margin-bottom: 8px;\n          letter-spacing: 0.4px;\n          color: ${colors.label};\n          display: block;\n          font-family: ${fonts.halyardText};\n        }\n        .input {\n          margin-bottom: 20px;\n          display: flex;\n          flex-direction: column;\n        }\n        .input__line {\n          height: 40px;\n          border-radius: 3px;\n          border: solid 1px ${colors.inputBorder};\n          padding: 0 16px;\n          font-family: ${fonts.halyardDisplay};\n          font-size: 17px;\n          letter-spacing: 0.4px;\n          color: ${colors.input};\n          width: 100%;\n          display: block;\n          box-sizing: border-box;\n        }\n        .input__line::placeholder {\n          font-family: ${fonts.halyardDisplay};\n          font-size: 18px;\n          line-height: 1.33;\n          letter-spacing: 0.4px;\n          color: ${colors.inputPlaceholder};\n        }\n        .input_invalid {\n          border: solid 1px ${colors.inputError};\n        }\n        .input__error {\n          margin-top: 8px;\n        }\n      `}</style>\n    </div>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","function defaultGetter(node) {\n  return node.childImageSharp.fluid;\n}\n\nexport function edgesByName(collection, getter = defaultGetter) {\n  return collection.edges.reduce(\n    (memo, edge) => ({\n      ...memo,\n      [edge.node.name]: getter(edge.node),\n    }),\n    {}\n  );\n}\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import React from 'react';\nimport Img from 'gatsby-image';\n\nimport { screen } from '../constants';\nimport Container from './Container';\n\nexport default function BlockLogos({ pretitle, title, data }) {\n  return (\n    <section className=\"block-logos\">\n      <Container>\n        <div className=\"block-logos__wrap\">\n          {pretitle && (\n            <div className=\"app__pretitle block-logos__pretitle\">\n              {pretitle}\n            </div>\n          )}\n          {title && (\n            <div className=\"app__title block-logos__title\">{title}</div>\n          )}\n          <div className=\"block-logos__content\">\n            {data.map(({ image, name, offsetTop = 0 }, index) => (\n              <Img\n                key={index}\n                fluid={image}\n                imgStyle={{ objectFit: 'contain' }}\n                alt={name}\n                className=\"app__image block-logos__image\"\n                style={{ top: offsetTop }}\n              />\n            ))}\n          </div>\n        </div>\n      </Container>\n      <style jsx>{`\n        .block-logos__wrap {\n          margin: 24px 0 60px;\n        }\n        .block-logos__content {\n          display: flex;\n          justify-content: space-between;\n          align-items: flex-end;\n        }\n\n        .block-logos__title {\n          text-align: center;\n          font-style: normal;\n          font-weight: normal;\n          font-size: 36px;\n          line-height: 42px;\n          max-width: 715px;\n          text-align: center;\n          margin-right: auto;\n          margin-left: auto;\n        }\n\n        .block-logos__pretitle {\n          text-align: center;\n        }\n\n        @media (max-width: ${screen.mobileMax}px) {\n          .block-logos__title {\n            max-width: 400px;\n          }\n          .block-logos__content {\n            align-items: center;\n            flex-direction: column;\n          }\n        }\n      `}</style>\n      <style jsx global>{`\n        .block-logos__image {\n          margin: 25px;\n          flex: 1;\n          max-height: 54px;\n        }\n        @media (max-width: ${screen.mobileMax}px) {\n          .block-logos__image {\n            min-width: 150px;\n          }\n        }\n      `}</style>\n    </section>\n  );\n}\n"],"sourceRoot":""}